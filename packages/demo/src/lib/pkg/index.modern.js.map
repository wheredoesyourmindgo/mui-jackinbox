{"version":3,"file":"index.modern.js","sources":["../src/mui-jackinbox/JackinBox.tsx"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react'\nimport clsx from 'clsx'\nimport {Name} from './Name'\nimport {Box, BoxProps} from '@mui/material'\n\n/*\nDocs:\n  https://animate.style\n*/\n\n// const VERSION = '4.1.1'\nconst PREFIX = 'animate__'\n\nexport type Props = {\n  children?: React.ReactNode\n  animate?: boolean\n  name: Name\n  hideUntilAnimate?: boolean\n  noDisplayUntilAnimate?: boolean\n  hideAfterAnimate?: boolean\n  noDisplayAfterAnimate?: boolean\n  speed?: 'slower' | 'slow' | 'fast' | 'faster' // 3s (or 3x), 2s (or 2x), 800ms (or .8x), 500ms (or .5x)\n  delay?: boolean | 1 | 2 | 3 | 4 | 5\n  repeat?: boolean | 1 | 2 | 3\n  infinite?: boolean\n  version?: string\n  // prefix?: string\n  delayBy?: string // defaults to 1s\n  speedBy?: string // defaults to 1s\n  repeatBy?: number // defaults to 1\n  onAnimateEnd?: (e?: React.AnimationEvent<HTMLElement>) => void\n  onAnimateStart?: (e?: React.AnimationEvent<HTMLElement>) => void\n} & BoxProps\n\nexport default function JackinBox({\n  children,\n  className: classNameProp,\n  animate = true,\n  name,\n  // version = VERSION,\n  prefix = PREFIX,\n  hideUntilAnimate = false,\n  noDisplayUntilAnimate = false,\n  hideAfterAnimate = false,\n  noDisplayAfterAnimate = false,\n  delayBy = '1s',\n  speedBy = '1s',\n  repeatBy = 1,\n  speed,\n  infinite,\n  delay: delayProp = false,\n  repeat: repeatProp = false,\n  onAnimateEnd,\n  onAnimateStart,\n  sx,\n  ...rest\n}: Props) {\n  const delay = delayProp === true ? 1 : delayProp\n  const repeat = repeatProp === true ? 1 : repeatProp\n  // Use animate value to determine when the element should be visible\n  const [hidden, setHidden] = useState(hideUntilAnimate ? !animate : false)\n  const [noDisplay, setNoDisplay] = useState(\n    noDisplayUntilAnimate ? !animate : false\n  )\n\n  const animateEndHandler = useCallback(\n    (e?: React.AnimationEvent<HTMLElement>) => {\n      hideAfterAnimate && setHidden(true)\n      noDisplayAfterAnimate && setNoDisplay(true)\n      onAnimateEnd?.(e)\n      // Don't trigger animation end events w/ nested <JackinBox/> children\n      e?.stopPropagation()\n    },\n    [onAnimateEnd, hideAfterAnimate, noDisplayAfterAnimate]\n  )\n\n  const [animateStarted, setAnimateStarted] = useState(false)\n\n  useEffect(() => {\n    if (animate && !animateStarted) {\n      hideUntilAnimate && setHidden(false)\n      noDisplayUntilAnimate && setNoDisplay(false)\n    }\n  }, [animate, hideUntilAnimate, noDisplayUntilAnimate, animateStarted])\n\n  const animateStartHandler = useCallback(\n    (e?: React.AnimationEvent<HTMLElement>) => {\n      setAnimateStarted(true)\n      onAnimateStart?.(e)\n      // Don't trigger animation end events w/ nested <JackinBox/> children\n      e?.stopPropagation()\n    },\n    [onAnimateStart]\n  )\n\n  return (\n    <Box\n      className={clsx([\n        {\n          [`${prefix}animated`]: animate,\n          [`${prefix}${name}`]: animate && name,\n          [`${prefix}${speed}`]: animate && speed,\n          [`${prefix}infinite`]: animate && infinite,\n          [`${prefix}repeat-${repeat}`]: animate && repeat,\n          [`${prefix}delay-${delay}s`]: animate && delay\n        },\n        classNameProp\n      ])}\n      sx={{\n        '--animate-delay': delayBy as any,\n        '--animate-duration': speedBy as any,\n        '--animate-repeat': repeatBy as any,\n        // Conditional CSS Properties\n        ...(hidden && {\n          visibility: 'hidden'\n        }),\n        ...(noDisplay && {\n          display: 'none'\n        }),\n        ...sx\n      }}\n      onAnimationEnd={animateEndHandler}\n      onAnimationStart={animateStartHandler}\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n"],"names":["PREFIX","JackinBox","children","className","classNameProp","animate","name","prefix","hideUntilAnimate","noDisplayUntilAnimate","hideAfterAnimate","noDisplayAfterAnimate","delayBy","speedBy","repeatBy","speed","infinite","delay","delayProp","repeat","repeatProp","onAnimateEnd","onAnimateStart","sx","rest","hidden","setHidden","useState","noDisplay","setNoDisplay","animateEndHandler","useCallback","e","stopPropagation","animateStarted","setAnimateStarted","useEffect","animateStartHandler","React","Box","clsx","visibility","display","onAnimationEnd","onAnimationStart"],"mappings":"okBAWMA,EAAS,qBAuBSC,SAAUC,SAChCA,EACAC,UAAWC,EAFqBC,QAGhCA,GAAU,EAHsBC,KAIhCA,EAJgCC,OAMhCA,EAASP,EANuBQ,iBAOhCA,GAAmB,EAPaC,sBAQhCA,GAAwB,EARQC,iBAShCA,GAAmB,EATaC,sBAUhCA,GAAwB,EAVQC,QAWhCA,EAAU,KAXsBC,QAYhCA,EAAU,KAZsBC,SAahCA,EAAW,EAbqBC,MAchCA,EAdgCC,SAehCA,EACAC,MAAOC,GAAY,EACnBC,OAAQC,GAAa,EAjBWC,aAkBhCA,EAlBgCC,eAmBhCA,EAnBgCC,GAoBhCA,KACGC,0IAEH,MAAMP,GAAsB,IAAdC,EAAqB,EAAIA,EACjCC,GAAwB,IAAfC,EAAsB,EAAIA,GAElCK,EAAQC,GAAaC,IAASnB,IAAoBH,IAClDuB,EAAWC,GAAgBF,IAChClB,IAAyBJ,GAGrByB,EAAoBC,EACvBC,IACCtB,GAAoBgB,GAAU,GAC9Bf,GAAyBkB,GAAa,SACtCR,GAAAA,EAAeW,SAEfA,GAAAA,EAAGC,mBAEL,CAACZ,EAAcX,EAAkBC,KAG5BuB,EAAgBC,GAAqBR,GAAS,GAErDS,EAAU,KACJ/B,IAAY6B,IACd1B,GAAoBkB,GAAU,GAC9BjB,GAAyBoB,GAAa,KAEvC,CAACxB,EAASG,EAAkBC,EAAuByB,IAEtD,MAAMG,EAAsBN,EACzBC,IACCG,GAAkB,SAClBb,GAAAA,EAAiBU,SAEjBA,GAAAA,EAAGC,mBAEL,CAACX,IAGH,OACEgB,gBAACC,KACCpC,UAAWqC,EAAK,CACd,CACE,IAAIjC,aAAmBF,EACvB,IAAIE,IAASD,KAASD,GAAWC,EACjC,IAAIC,IAASQ,KAAUV,GAAWU,EAClC,IAAIR,aAAmBF,GAAWW,EAClC,IAAIT,WAAgBY,KAAWd,GAAWc,EAC1C,IAAIZ,UAAeU,MAAWZ,GAAWY,GAE3Cb,IAEFmB,MACE,kBAAmBX,EACnB,qBAAsBC,EACtB,mBAAoBC,GAEhBW,GAAU,CACZgB,WAAY,UAEVb,GAAa,CACfc,QAAS,QAERnB,GAELoB,eAAgBb,EAChBc,iBAAkBP,GACdb,GAEHtB"}