{"version":3,"file":"index.modern.js","sources":["../src/mui-jackinbox/JackinBox.tsx"],"sourcesContent":["import React, {useCallback, useEffect, useState} from 'react'\nimport clsx from 'clsx'\nimport {Name} from './Name'\nimport {Box, BoxProps, createStyles, makeStyles} from '@material-ui/core'\n\n/*\nDocs:\n  https://animate.style\n*/\n\n// const VERSION = '4.1.1'\nconst PREFIX = 'animate__'\n\nexport type Props = {\n  children?: React.ReactNode\n  animate?: boolean\n  name: Name\n  hideUntilAnimate?: boolean\n  noDisplayUntilAnimate?: boolean\n  hideAfterAnimate?: boolean\n  noDisplayAfterAnimate?: boolean\n  speed?: 'slower' | 'slow' | 'fast' | 'faster' // 3s (or 3x), 2s (or 2x), 800ms (or .8x), 500ms (or .5x)\n  delay?: boolean | 1 | 2 | 3 | 4 | 5\n  repeat?: boolean | 1 | 2 | 3\n  infinite?: boolean\n  version?: string\n  prefix?: string\n  delayBy?: string // defaults to 1s\n  speedBy?: string // defaults to 1s\n  repeatBy?: number // defaults to 1\n  onAnimateEnd?: (e?: React.AnimationEvent<HTMLElement>) => void\n  onAnimateStart?: (e?: React.AnimationEvent<HTMLElement>) => void\n} & Partial<BoxProps>\n\ninterface UseStylesProps {\n  hidden: boolean\n  noDisplay: boolean\n  delayBy: string\n  speedBy: string\n  repeatBy: number\n}\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    root: ({\n      hidden,\n      noDisplay,\n      delayBy,\n      speedBy,\n      repeatBy\n    }: UseStylesProps) => ({\n      '--animate-delay': delayBy,\n      '--animate-duration': speedBy,\n      '--animate-repeat': repeatBy,\n      // Conditional CSS Properties\n      ...(hidden && {\n        visibility: 'hidden'\n      }),\n      ...(noDisplay && {\n        display: 'none'\n      })\n    })\n  })\n)\n\nexport default function JackinBox({\n  children,\n  className: classNameProp,\n  animate = true,\n  name,\n  // version = VERSION,\n  prefix = PREFIX,\n  hideUntilAnimate = false,\n  noDisplayUntilAnimate = false,\n  hideAfterAnimate = false,\n  noDisplayAfterAnimate = false,\n  delayBy = '1s',\n  speedBy = '1s',\n  repeatBy = 1,\n  speed,\n  infinite,\n  delay: delayProp = false,\n  repeat: repeatProp = false,\n  onAnimateEnd,\n  onAnimateStart,\n  ...rest\n}: Props) {\n  const delay = delayProp === true ? 1 : delayProp\n  const repeat = repeatProp === true ? 1 : repeatProp\n  // Use animate value to determine when the element should be visible\n  const [hidden, setHidden] = useState(hideUntilAnimate ? !animate : false)\n  const [noDisplay, setNoDisplay] = useState(\n    noDisplayUntilAnimate ? !animate : false\n  )\n\n  const classes = useStyles({\n    hidden,\n    noDisplay,\n    delayBy,\n    speedBy,\n    repeatBy\n  })\n\n  const animateEndHandler = useCallback(\n    (e?: React.AnimationEvent<HTMLElement>) => {\n      hideAfterAnimate && setHidden(true)\n      noDisplayAfterAnimate && setNoDisplay(true)\n      onAnimateEnd?.(e)\n      // Don't trigger animation end events w/ nested <JackinBox/> children\n      e?.stopPropagation()\n    },\n    [onAnimateEnd, hideAfterAnimate, noDisplayAfterAnimate]\n  )\n\n  useEffect(() => {\n    if (animate) {\n      hideUntilAnimate && setHidden(false)\n      noDisplayUntilAnimate && setNoDisplay(false)\n    }\n  }, [animate, hideUntilAnimate, noDisplayUntilAnimate])\n\n  const animateStartHandler = useCallback(\n    (e?: React.AnimationEvent<HTMLElement>) => {\n      onAnimateStart?.(e)\n      // Don't trigger animation end events w/ nested <JackinBox/> children\n      e?.stopPropagation()\n    },\n    [onAnimateStart]\n  )\n\n  return (\n    <Box\n      className={clsx([\n        {\n          [`${prefix}animated`]: animate,\n          [`${prefix}${name}`]: animate && name,\n          [`${prefix}${speed}`]: animate && speed,\n          [`${prefix}infinite`]: animate && infinite,\n          [`${prefix}repeat-${repeat}`]: animate && repeat,\n          [`${prefix}delay-${delay}s`]: animate && delay\n        },\n        classes.root,\n        classNameProp\n      ])}\n      onAnimationEnd={animateEndHandler}\n      onAnimationStart={animateStartHandler}\n      {...rest}\n    >\n      {children}\n    </Box>\n  )\n}\n"],"names":["PREFIX","useStyles","makeStyles","createStyles","root","hidden","noDisplay","delayBy","speedBy","repeatBy","visibility","display","JackinBox","children","className","classNameProp","animate","name","prefix","hideUntilAnimate","noDisplayUntilAnimate","hideAfterAnimate","noDisplayAfterAnimate","speed","infinite","delay","delayProp","repeat","repeatProp","onAnimateEnd","onAnimateStart","rest","setHidden","useState","setNoDisplay","classes","animateEndHandler","useCallback","e","stopPropagation","useEffect","animateStartHandler","React","Box","clsx","onAnimationEnd","onAnimationStart"],"mappings":"qmBAWMA,EAAS,YA+BTC,EAAYC,EAAW,IAC3BC,EAAa,CACXC,KAAM,EACJC,OAAAA,EACAC,UAAAA,EACAC,QAAAA,EACAC,QAAAA,EACAC,SAAAA,QAEA,kBAAmBF,EACnB,qBAAsBC,EACtB,mBAAoBC,GAEhBJ,GAAU,CACZK,WAAY,UAEVJ,GAAa,CACfK,QAAS,qBAMOC,SAAUC,SAChCA,EACAC,UAAWC,EAFqBC,QAGhCA,GAAU,EAHsBC,KAIhCA,EAJgCC,OAMhCA,EAASlB,EANuBmB,iBAOhCA,GAAmB,EAPaC,sBAQhCA,GAAwB,EARQC,iBAShCA,GAAmB,EATaC,sBAUhCA,GAAwB,EAVQf,QAWhCA,EAAU,KAXsBC,QAYhCA,EAAU,KAZsBC,SAahCA,EAAW,EAbqBc,MAchCA,EAdgCC,SAehCA,EACAC,MAAOC,GAAY,EACnBC,OAAQC,GAAa,EAjBWC,aAkBhCA,EAlBgCC,eAmBhCA,KACGC,0IAEH,MAAMN,GAAsB,IAAdC,EAAqB,EAAIA,EACjCC,GAAwB,IAAfC,EAAsB,EAAIA,GAElCvB,EAAQ2B,GAAaC,IAASd,IAAoBH,IAClDV,EAAW4B,GAAgBD,IAChCb,IAAyBJ,GAGrBmB,EAAUlC,EAAU,CACxBI,OAAAA,EACAC,UAAAA,EACAC,QAAAA,EACAC,QAAAA,EACAC,SAAAA,IAGI2B,EAAoBC,EACvBC,IACCjB,GAAoBW,GAAU,GAC9BV,GAAyBY,GAAa,SACtCL,GAAAA,EAAeS,SAEfA,GAAAA,EAAGC,mBAEL,CAACV,EAAcR,EAAkBC,IAGnCkB,EAAU,KACJxB,IACFG,GAAoBa,GAAU,GAC9BZ,GAAyBc,GAAa,KAEvC,CAAClB,EAASG,EAAkBC,IAE/B,MAAMqB,EAAsBJ,EACzBC,UACCR,GAAAA,EAAiBQ,SAEjBA,GAAAA,EAAGC,mBAEL,CAACT,IAGH,OACEY,gBAACC,KACC7B,UAAW8B,EAAK,CACd,CACE,IAAI1B,aAAmBF,EACvB,IAAIE,IAASD,KAASD,GAAWC,EACjC,IAAIC,IAASK,KAAUP,GAAWO,EAClC,IAAIL,aAAmBF,GAAWQ,EAClC,IAAIN,WAAgBS,KAAWX,GAAWW,EAC1C,IAAIT,UAAeO,MAAWT,GAAWS,GAE3CU,EAAQ/B,KACRW,IAEF8B,eAAgBT,EAChBU,iBAAkBL,GACdV,GAEHlB"}